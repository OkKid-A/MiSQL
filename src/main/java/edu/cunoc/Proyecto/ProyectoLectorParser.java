
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package edu.cunoc.Proyecto;

import edu.cunoc.Archivador.*;
import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class ProyectoLectorParser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public ProyectoLectorParser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public ProyectoLectorParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public ProyectoLectorParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\020\000\002\002\004\000\002\005\005\000\002\004" +
    "\004\000\002\004\002\000\002\015\003\000\002\015\003" +
    "\000\002\006\005\000\002\007\004\000\002\007\002\000" +
    "\002\010\010\000\002\014\006\000\002\013\006\000\002" +
    "\011\007\000\002\012\007\000\002\003\006\000\002\002" +
    "\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\053\000\004\005\004\001\002\000\004\012\053\001" +
    "\002\000\004\005\ufffe\001\002\000\004\002\007\001\002" +
    "\000\004\002\001\001\002\000\004\005\011\001\002\000" +
    "\010\007\050\013\023\014\025\001\002\000\004\005\ufffd" +
    "\001\002\000\004\002\000\001\002\000\004\005\ufffc\001" +
    "\002\000\004\005\uffff\001\002\000\004\005\ufff9\001\002" +
    "\000\004\005\021\001\002\000\004\005\ufffb\001\002\000" +
    "\010\007\024\013\023\014\025\001\002\000\004\005\ufffa" +
    "\001\002\000\004\010\027\001\002\000\004\014\035\001" +
    "\002\000\004\010\027\001\002\000\004\006\034\001\002" +
    "\000\004\004\030\001\002\000\004\015\031\001\002\000" +
    "\004\016\032\001\002\000\004\015\033\001\002\000\006" +
    "\006\ufff5\011\ufff5\001\002\000\004\005\ufff7\001\002\000" +
    "\004\006\036\001\002\000\004\005\ufff3\001\002\000\004" +
    "\011\040\001\002\000\004\004\044\001\002\000\004\007" +
    "\042\001\002\000\004\006\043\001\002\000\004\005\ufff8" +
    "\001\002\000\004\015\045\001\002\000\004\017\046\001" +
    "\002\000\004\015\047\001\002\000\004\007\ufff4\001\002" +
    "\000\004\012\051\001\002\000\004\006\052\001\002\000" +
    "\004\002\ufff2\001\002\000\004\010\027\001\002\000\004" +
    "\006\055\001\002\000\004\005\ufff6\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\053\000\006\005\005\013\004\001\001\000\002\001" +
    "\001\000\004\004\007\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\002\012\006\011\010\013\014\015\015" +
    "\014\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\007" +
    "\016\001\001\000\014\003\017\006\011\010\013\014\015" +
    "\015\021\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\036\001\001\000\002\001\001" +
    "\000\004\011\025\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\012\040\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\011\053\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ProyectoLectorParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ProyectoLectorParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ProyectoLectorParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public ProyectoLectorParser(ProyectoLectorLexer lex){
                super(lex);
            }

private ProyectoLector proyectoLector = new ProyectoLector();

public ProyectoLector getProyectoLector(){
    return proyectoLector;
}

public void syntax_error(Symbol cur_token) {
            System.out.println("Simbolo con error:" + symbl_name_from_id(cur_token.sym));
            System.out.println("Linea " + cur_token.left);
            System.out.println("Columna " + cur_token.right);
            if (expected_token_ids().isEmpty()) {
                System.out.println("ya no se esperaba ningun simbolo");
            }
        }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$ProyectoLectorParser$actions {
  private final ProyectoLectorParser parser;

  /** Constructor */
  CUP$ProyectoLectorParser$actions(ProyectoLectorParser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$ProyectoLectorParser$do_action_part00000000(
    int                        CUP$ProyectoLectorParser$act_num,
    java_cup.runtime.lr_parser CUP$ProyectoLectorParser$parser,
    java.util.Stack            CUP$ProyectoLectorParser$stack,
    int                        CUP$ProyectoLectorParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ProyectoLectorParser$result;

      /* select the action based on the action number */
      switch (CUP$ProyectoLectorParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= proyecto EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).right;
		ProyectoLector start_val = (ProyectoLector)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).value;
		RESULT = start_val;
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$ProyectoLectorParser$parser.done_parsing();
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // proyecto ::= proy_top modulo proy_bot 
            {
              ProyectoLector RESULT =null;
		int ptleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).left;
		int ptright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).right;
		String pt = (String)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).value;
		 proyectoLector.setNombre(pt); RESULT = proyectoLector; 
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("proyecto",3, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // modulo ::= modulo direc 
            {
              Object RESULT =null;
		int dleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()).right;
		Location d = (Location)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.peek()).value;
		 proyectoLector.add(d);
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("modulo",2, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // modulo ::= 
            {
              Object RESULT =null;

              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("modulo",2, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // direc ::= folder 
            {
              Location RESULT =null;
		int fleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()).left;
		int fright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()).right;
		Carpeta f = (Carpeta)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.peek()).value;
		 RESULT = f;
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("direc",11, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // direc ::= arch 
            {
              Location RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()).right;
		Archivo a = (Archivo)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.peek()).value;
		 RESULT = a;
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("direc",11, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // folder ::= car_top mod car_bot 
            {
              Carpeta RESULT =null;
		int cleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).right;
		String c = (String)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).value;
		int mleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).right;
		Carpeta m = (Carpeta)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).value;
		 m.setName(c); RESULT = m;
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("folder",4, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // mod ::= mod direc 
            {
              Carpeta RESULT =null;
		int mleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).left;
		int mright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).right;
		Carpeta m = (Carpeta)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()).left;
		int dright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()).right;
		Location d = (Location)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.peek()).value;
		m.add(d); RESULT = m;
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("mod",5, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // mod ::= 
            {
              Carpeta RESULT =null;
		 RESULT = new Carpeta();
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("mod",5, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // arch ::= MENOSQUE ARCHIVO name path DIAGONAL MAYORQUE 
            {
              Archivo RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-3)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-3)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-3)).value;
		int pleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-2)).value;
		 RESULT = new Archivo(n,p); 
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("arch",6, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-5)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // car_top ::= MENOSQUE CARPETA name MAYORQUE 
            {
              String RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).value;
		 RESULT = n; 
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("car_top",10, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-3)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // proy_top ::= MENOSQUE PROYECTO name MAYORQUE 
            {
              String RESULT =null;
		int nleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).left;
		int nright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).right;
		String n = (String)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).value;
		 RESULT = n; 
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("proy_top",9, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-3)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // name ::= NOMBRE IGUAL COMILLA ID_ARCHIVO COMILLA 
            {
              String RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).value;
		 RESULT = id; 
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("name",7, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-4)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // path ::= UBICACION IGUAL COMILLA DIRECCION COMILLA 
            {
              String RESULT =null;
		int pleft = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).left;
		int pright = ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).right;
		String p = (String)((java_cup.runtime.Symbol) CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-1)).value;
		 RESULT = p; 
              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("path",8, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-4)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // car_bot ::= MENOSQUE DIAGONAL CARPETA MAYORQUE 
            {
              Object RESULT =null;

              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("car_bot",1, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-3)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // proy_bot ::= MENOSQUE DIAGONAL PROYECTO MAYORQUE 
            {
              Object RESULT =null;

              CUP$ProyectoLectorParser$result = parser.getSymbolFactory().newSymbol("proy_bot",0, ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.elementAt(CUP$ProyectoLectorParser$top-3)), ((java_cup.runtime.Symbol)CUP$ProyectoLectorParser$stack.peek()), RESULT);
            }
          return CUP$ProyectoLectorParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$ProyectoLectorParser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$ProyectoLectorParser$do_action(
    int                        CUP$ProyectoLectorParser$act_num,
    java_cup.runtime.lr_parser CUP$ProyectoLectorParser$parser,
    java.util.Stack            CUP$ProyectoLectorParser$stack,
    int                        CUP$ProyectoLectorParser$top)
    throws java.lang.Exception
    {
              return CUP$ProyectoLectorParser$do_action_part00000000(
                               CUP$ProyectoLectorParser$act_num,
                               CUP$ProyectoLectorParser$parser,
                               CUP$ProyectoLectorParser$stack,
                               CUP$ProyectoLectorParser$top);
    }
}

}
