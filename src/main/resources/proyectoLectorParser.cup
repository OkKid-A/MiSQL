package edu.cunoc.Proyecto;

import edu.cunoc.Archivador.*;
import java_cup.runtime.*;

parser code {:
    public ProyectoLectorParser(ProyectoLectorLexer lex){
                super(lex);
            }

private ProyectoLector proyectoLector = new ProyectoLector();

public ProyectoLector getProyectoLector(){
    return proyectoLector;
}

public void syntax_error(Symbol cur_token) {
            System.out.println("Simbolo con error:" + symbl_name_from_id(cur_token.sym));
            System.out.println("Linea " + cur_token.left);
            System.out.println("Columna " + cur_token.right);
            if (expected_token_ids().isEmpty()) {
                System.out.println("ya no se esperaba ningun simbolo");
            }
        }

:}

/* Terminales */

terminal            IGUAL, MENOSQUE, MAYORQUE, DIAGONAL, NOMBRE, UBICACION, PROYECTO, ARCHIVO, CARPETA, COMILLA;
terminal String     ID_ARCHIVO,  DIRECCION;

/* No Terminales */

nonterminal                    proy_bot, car_bot, modulo;
nonterminal ProyectoLector     proyecto;
nonterminal Carpeta            folder, mod;
nonterminal Archivo            arch;
nonterminal String             name, path, proy_top, car_top;
nonterminal Location           direc;

start with proyecto;

proyecto ::= proy_top:pt modulo proy_bot                  {: proyectoLector.setNombre(pt); RESULT = proyectoLector; :}
            ;

modulo ::= modulo direc:d                                 {: proyectoLector.add(d);:}
           |
           ;

direc ::= folder:f                                        {: RESULT = f;:}
        | arch:a                                          {: RESULT = a;:}
        ;

folder ::= car_top:c mod:m car_bot                        {: m.setName(c); RESULT = m;:}
          ;

mod ::= mod:m direc:d                                     {:m.add(d); RESULT = m;:}
           |                                              {: RESULT = new Carpeta();:}
           ;

arch ::= MENOSQUE ARCHIVO name:n path:p DIAGONAL MAYORQUE {: RESULT = new Archivo(n,p); :}
        ;

car_top ::= MENOSQUE CARPETA name:n MAYORQUE              {: RESULT = n; :}
        ;

proy_top ::= MENOSQUE PROYECTO name:n MAYORQUE            {: RESULT = n; :}
        ;

name ::= NOMBRE IGUAL COMILLA ID_ARCHIVO:id COMILLA       {: RESULT = id; :}
        ;

path ::= UBICACION IGUAL COMILLA DIRECCION:p COMILLA      {: RESULT = p; :}
        ;

car_bot ::= MENOSQUE DIAGONAL CARPETA MAYORQUE;

proy_bot ::= MENOSQUE DIAGONAL PROYECTO MAYORQUE;